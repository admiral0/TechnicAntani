buildscript {
    ext {
        kotlin_version = '0.12.213'
        springBootVersion = '1.2.4.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE"
    }
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'TechnicAntani'
    version = '3.0.0-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}


dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    testCompile("org.springframework.boot:spring-boot-starter-test")
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.github.salomonbrys.kotson:kotson:1.2.0'
    compile 'org.eclipse.jgit:org.eclipse.jgit:3.4.1.201406201815-r'
    compile 'co.paralleluniverse:quasar-kotlin:0.7.0'
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

springBoot {
   // mainClass = 'it.admiral0.technicantani.TechnicantaniPackage'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}
